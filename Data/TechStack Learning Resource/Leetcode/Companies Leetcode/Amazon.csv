No,Title,Tags,Acceptance,Difficulty,Frequency
2781,Length of the Longest Valid Substring,[Array][Hash Table][String][Sliding Window],35.6%,Hard,2.767906796903054
767,Reorganize String,[Hash Table][String][Greedy][Sorting][Heap (Priority Queue)][Counting],54.5%,Medium,2.644767562046146
2055,Plates Between Candles,[Array][String][Binary Search][Prefix Sum],44.2%,Medium,2.5216283271892377
1152,Analyze User Website Visit Pattern,[Array][Hash Table][Sorting],42.9%,Medium,2.3984890923323294
2519,Count the Number of K-Big Indices,[Array][Binary Search][Divide and Conquer][Binary Indexed Tree][Segment Tree][Merge Sort][Ordered Set],53.4%,Hard,2.353757315758966
1,Two Sum,[Array][Hash Table],52.0%,Easy,2.3434195884930533
42,Trapping Rain Water,[Array][Two Pointers][Dynamic Programming][Stack][Monotonic Stack],60.8%,Hard,2.220280353636145
2355,Maximum Number of Books You Can Take,[Array][Dynamic Programming][Stack][Monotonic Stack],41.3%,Hard,2.097141118779237
1359,Count All Valid Pickup and Delivery Options,[Math][Dynamic Programming][Combinatorics],65.2%,Hard,2.0724728723637424
2357,Make Array Zero by Subtracting Equal Amounts,[Array][Hash Table][Greedy][Sorting][Heap (Priority Queue)][Simulation],72.1%,Easy,2.0028650419827856
632,Smallest Range Covering Elements from K Lists,[Array][Hash Table][Greedy][Sliding Window][Sorting][Heap (Priority Queue)],62.3%,Hard,1.8919341478535157
4,Median of Two Sorted Arrays,[Array][Binary Search][Divide and Conquer],39.4%,Hard,1.8484148112429875
472,Concatenated Words,[Array][String][Dynamic Programming][Depth-First Search][Trie],49.6%,Hard,1.8177349556313156
127,Word Ladder,[Hash Table][String][Breadth-First Search],38.8%,Hard,1.6945957207744073
818,Race Car,[Dynamic Programming],43.6%,Hard,1.6945957207744073
2340,Minimum Adjacent Swaps to Make a Valid Array,[Array][Greedy],72.8%,Medium,1.65328979496295
1220,Count Vowels Permutation,[Dynamic Programming],62.2%,Hard,1.6506808709681495
146,LRU Cache,[Hash Table][Linked List][Design][Doubly-Linked List],42.2%,Medium,1.5894759804141987
2281,Sum of Total Strength of Wizards,[Array][Stack][Monotonic Stack][Prefix Sum],27.7%,Hard,1.499234772300486
2870,Minimum Number of Operations to Make Array Empty,[Array][Hash Table][Greedy][Counting],61.9%,Medium,1.4950275612563562
1567,Maximum Length of Subarray With Positive Product,[Array][Dynamic Programming][Greedy],44.2%,Medium,1.4766784225881597
1846,Maximum Element After Decreasing and Rearranging,[Array][Greedy][Sorting],66.0%,Medium,1.4663370687934272
200,Number of Islands,[Array][Depth-First Search][Breadth-First Search][Union Find][Matrix],58.5%,Medium,1.4384801142904609
210,Course Schedule II,[Depth-First Search][Breadth-First Search][Graph][Topological Sort],50.1%,Medium,1.3933354631349397
588,Design In-Memory File System,[Hash Table][String][Design][Trie],48.2%,Hard,1.3910002521573033
907,Sum of Subarray Minimums,[Array][Dynamic Programming][Stack][Monotonic Stack],37.4%,Medium,1.3752850756115214
88,Merge Sorted Array,[Array][Two Pointers][Sorting],49.2%,Easy,1.3752303089787397
847,Shortest Path Visiting All Nodes,[Dynamic Programming][Bit Manipulation][Breadth-First Search][Graph][Bitmask],65.6%,Hard,1.349926716949016
815,Bus Routes,[Array][Hash Table][Breadth-First Search],48.2%,Hard,1.3440770366239985
49,Group Anagrams,[Array][Hash Table][String][Sorting],68.2%,Medium,1.303220522586548
1531,String Compression II,[String][Dynamic Programming],52.8%,Hard,1.2992829841302609
140,Word Break II,[Array][Hash Table][String][Dynamic Programming][Backtracking][Trie][Memoization],47.5%,Hard,1.293254329850105
1768,Merge Strings Alternately,[Two Pointers][String],79.5%,Easy,1.2786720484137417
1063,Number of Valid Subarrays,[Array][Stack][Monotonic Stack],78.3%,Hard,1.252762968495368
1727,Largest Submatrix With Rearrangements,[Array][Greedy][Sorting][Matrix],75.4%,Medium,1.252762968495368
2268,Minimum Number of Keypresses,[Hash Table][String][Greedy][Sorting][Counting],70.9%,Medium,1.252762968495368
1425,Constrained Subsequence Sum,[Array][Dynamic Programming][Queue][Sliding Window][Heap (Priority Queue)][Monotonic Queue],56.7%,Hard,1.2144441041932312
935,Knight Dialer,[Dynamic Programming],59.9%,Medium,1.209837923778334
5,Longest Palindromic Substring,[String][Dynamic Programming],33.7%,Medium,1.209593720551196
2,Add Two Numbers,[Linked List][Math][Recursion],42.4%,Medium,1.206625874557668
1420,Build Array Where You Can Find The Maximum Exactly K Comparisons,[Dynamic Programming][Prefix Sum],69.0%,Hard,1.1996154989569803
207,Course Schedule,[Depth-First Search][Breadth-First Search][Graph][Topological Sort],46.6%,Medium,1.1783556399556356
3,Longest Substring Without Repeating Characters,[Hash Table][String][Sliding Window],34.5%,Medium,1.1444586767935283
812,Largest Triangle Area,[Array][Math][Geometry],60.3%,Easy,1.0698333241180664
875,Koko Eating Bananas,[Array][Binary Search],49.0%,Medium,1.0202022344184585
22,Generate Parentheses,[String][Dynamic Programming][Backtracking],74.2%,Medium,1.017978389726985
11,Container With Most Water,[Array][Two Pointers][Greedy],54.9%,Medium,1.013820725054123
994,Rotting Oranges,[Array][Breadth-First Search][Matrix],53.9%,Medium,0.9808292530117262
121,Best Time to Buy and Sell Stock,[Array][Dynamic Programming],53.5%,Easy,0.9803665256886764
56,Merge Intervals,[Array][Sorting],47.1%,Medium,0.9725463130153784
1457,Pseudo-Palindromic Paths in a Binary Tree,[Bit Manipulation][Tree][Depth-First Search][Breadth-First Search][Binary Tree],68.5%,Medium,0.9473813189441862
458,Poor Pigs,[Math][Dynamic Programming][Combinatorics],59.9%,Hard,0.9315582040049435
1239,Maximum Length of a Concatenated String with Unique Characters,[Array][String][Backtracking][Bit Manipulation],54.1%,Medium,0.9315582040049435
343,Integer Break,[Math][Dynamic Programming],60.2%,Medium,0.9289758914014707
1814,Count Nice Pairs in an Array,[Array][Hash Table][Math][Counting],49.2%,Medium,0.9264088620397397
295,Find Median from Data Stream,[Two Pointers][Design][Sorting][Heap (Priority Queue)][Data Stream],51.8%,Hard,0.9088557533866369
587,Erect the Fence,[Array][Math][Geometry],51.9%,Hard,0.9088557533866369
2742,Painting the Walls,[Array][Dynamic Programming],51.1%,Hard,0.8967461358011848
128,Longest Consecutive Sequence,[Array][Hash Table][Union Find],47.3%,Medium,0.8873031950009028
2667,Create Hello World Function,,80.9%,Easy,0.8725623620466855
1590,Make Sum Divisible by P,[Array][Hash Table][Prefix Sum],28.9%,Medium,0.8690378470236095
14,Longest Common Prefix,[String][Trie],42.4%,Easy,0.8644369338389098
869,Reordered Power of 2,[Hash Table][Math][Sorting][Counting][Enumeration],62.8%,Medium,0.8472978603872036
23,Merge k Sorted Lists,[Linked List][Divide and Conquer][Heap (Priority Queue)][Merge Sort],52.2%,Hard,0.8407436200567103
150,Evaluate Reverse Polish Notation,[Array][Math][Stack],51.0%,Medium,0.8394392737746823
475,Heaters,[Array][Two Pointers][Binary Search][Sorting],37.6%,Medium,0.8347976976229722
155,Min Stack,[Stack][Design],53.8%,Medium,0.8246340008099917
15,3Sum,[Array][Two Pointers][Sorting],34.2%,Medium,0.8244217316519031
1496,Path Crossing,[Hash Table][String],62.4%,Easy,0.8241754429663495
1044,Longest Duplicate Substring,[String][Binary Search][Sliding Window][Rolling Hash][Suffix Array][Hash Function],30.6%,Hard,0.8109302162163288
2861,Maximum Number of Alloys,[Array][Binary Search],37.6%,Medium,0.8109302162163288
36,Valid Sudoku,[Array][Hash Table][Matrix],59.3%,Medium,0.8042567342472128
55,Jump Game,[Array][Dynamic Programming][Greedy],38.5%,Medium,0.8030814424242575
909,Snakes and Ladders,[Array][Breadth-First Search][Matrix],43.8%,Medium,0.7919645976288356
503,Next Greater Element II,[Array][Stack][Monotonic Stack],63.7%,Medium,0.7849120431121034
287,Find the Duplicate Number,[Array][Two Pointers][Binary Search][Bit Manipulation],59.4%,Medium,0.7839658545779734
1647,Minimum Deletions to Make Character Frequencies Unique,[Hash Table][String][Greedy][Sorting],61.2%,Medium,0.7812544480702122
729,My Calendar I,[Binary Search][Design][Segment Tree][Ordered Set],56.6%,Medium,0.7741883905630712
460,LFU Cache,[Hash Table][Linked List][Design][Doubly-Linked List],44.0%,Hard,0.7698398013481997
2385,Amount of Time for Binary Tree to Be Infected,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],63.0%,Medium,0.7698398013481997
17,Letter Combinations of a Phone Number,[Hash Table][String][Backtracking],60.0%,Medium,0.755362192695527
1897,Redistribute Characters to Make All Strings Equal,[Hash Table][String][Counting],67.7%,Easy,0.7537718023763802
993,Cousins in Binary Tree,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],55.8%,Easy,0.7435780341868372
606,Construct String from Binary Tree,[String][Tree][Depth-First Search][Binary Tree],69.0%,Medium,0.7407752295491999
48,Rotate Image,[Array][Math][Matrix],73.8%,Medium,0.7400208655177113
10,Regular Expression Matching,[String][Dynamic Programming][Recursion],28.1%,Hard,0.7385488363392251
118,Pascal's Triangle,[Array][Dynamic Programming],73.9%,Easy,0.7383903432907946
84,Largest Rectangle in Histogram,[Array][Stack][Monotonic Stack],44.0%,Hard,0.734576365973644
7,Reverse Integer,[Math],28.4%,Medium,0.7289233537252289
1757,Recyclable and Low Fat Products,[Database],89.2%,Easy,0.7271535485451404
20,Valid Parentheses,[String][Stack],40.5%,Easy,0.726798283513693
387,First Unique Character in a String,[Hash Table][String][Queue][Counting],62.0%,Easy,0.7221347174331976
2904,Shortest and Lexicographically Smallest Beautiful String,[String][Sliding Window],37.9%,Medium,0.7191226669632059
53,Maximum Subarray,[Array][Divide and Conquer][Dynamic Programming],50.6%,Medium,0.7139961891116962
215,Kth Largest Element in an Array,[Array][Divide and Conquer][Sorting][Heap (Priority Queue)][Quickselect],66.8%,Medium,0.7069476860068781
347,Top K Frequent Elements,[Array][Hash Table][Divide and Conquer][Sorting][Heap (Priority Queue)][Bucket Sort][Counting][Quickselect],62.7%,Medium,0.7001080260008576
2038,Remove Colored Pieces if Both Neighbors are the Same Color,[Math][String][Greedy][Game Theory],62.8%,Medium,0.6931471805599453
1658,Minimum Operations to Reduce X to Zero,[Array][Hash Table][Binary Search][Sliding Window][Prefix Sum],39.7%,Medium,0.6563976383512038
300,Longest Increasing Subsequence,[Array][Binary Search][Dynamic Programming],55.0%,Medium,0.647343522991433
13,Roman to Integer,[Hash Table][Math][String],60.8%,Easy,0.6472959360162669
135,Candy,[Array][Greedy],43.2%,Hard,0.6361178989515811
233,Number of Digit One,[Math][Dynamic Programming][Recursion],34.4%,Hard,0.6325225587435105
227,Basic Calculator II,[Math][String][Stack],43.4%,Medium,0.6220141936970933
1793,Maximum Score of a Good Subarray,[Array][Two Pointers][Binary Search][Stack][Monotonic Stack],64.6%,Hard,0.6157605169445252
2353,Design a Food Rating System,[Hash Table][Design][Heap (Priority Queue)][Ordered Set],45.6%,Medium,0.6157605169445252
202,Happy Number,[Hash Table][Math][Two Pointers],55.9%,Easy,0.6099482367049714
1143,Longest Common Subsequence,[String][Dynamic Programming],57.8%,Medium,0.6089550893395974
468,Validate IP Address,[String],26.9%,Medium,0.6061358035703156
733,Flood Fill,[Array][Depth-First Search][Breadth-First Search][Matrix],63.6%,Easy,0.5940217850471116
1122,Relative Sort Array,[Array][Hash Table][Sorting][Counting Sort],68.9%,Easy,0.5897688261061103
1095,Find in Mountain Array,[Array][Binary Search][Interactive],40.6%,Hard,0.5858181603294468
31,Next Permutation,[Array][Two Pointers],39.5%,Medium,0.5841370258145696
380,Insert Delete GetRandom O(1),[Array][Hash Table][Math][Design][Randomized],54.4%,Medium,0.5802678324880917
212,Word Search II,[Array][String][Backtracking][Trie][Matrix],36.2%,Hard,0.571475437354794
772,Basic Calculator III,[Math][String][Stack][Recursion],50.2%,Hard,0.5705448584676129
863,All Nodes Distance K in Binary Tree,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],64.3%,Medium,0.5652447268076234
1043,Partition Array for Maximum Sum,[Array][Dynamic Programming],76.4%,Medium,0.5643439291313685
1035,Uncrossed Lines,[Array][Dynamic Programming],62.8%,Medium,0.5543107357057295
1218,Longest Arithmetic Subsequence of Given Difference,[Array][Hash Table][Dynamic Programming],54.8%,Medium,0.5543107357057295
138,Copy List with Random Pointer,[Hash Table][Linked List],55.5%,Medium,0.5523478339075513
1003,Check If Word Is Valid After Substitutions,[String][Stack],59.3%,Medium,0.5465437063680699
1361,Validate Binary Tree Nodes,[Tree][Depth-First Search][Breadth-First Search][Union Find][Graph][Binary Tree],44.0%,Medium,0.5456944494168147
18,4Sum,[Array][Two Pointers][Sorting],36.1%,Medium,0.5445663045938038
2235,Add Two Integers,[Math],87.5%,Easy,0.544520359374281
238,Product of Array Except Self,[Array][Prefix Sum],65.3%,Medium,0.5400568337765765
134,Gas Station,[Array][Greedy],45.6%,Medium,0.539732390088142
91,Decode Ways,[String][Dynamic Programming],34.7%,Medium,0.538996500732687
2222,Number of Ways to Select Buildings,[String][Dynamic Programming][Prefix Sum],50.6%,Medium,0.538996500732687
139,Word Break,[Array][Hash Table][String][Dynamic Programming][Trie][Memoization],46.6%,Medium,0.5353476606629848
515,Find Largest Value in Each Tree Row,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],65.7%,Medium,0.535302370192545
1529,Minimum Suffix Flips,[String][Greedy],73.1%,Medium,0.5245244681241525
169,Majority Element,[Array][Hash Table][Divide and Conquer][Sorting][Counting],64.7%,Easy,0.5227711583035607
540,Single Element in a Sorted Array,[Array][Binary Search],59.0%,Medium,0.520251809446536
647,Palindromic Substrings,[String][Dynamic Programming],69.9%,Medium,0.5198754592859085
695,Max Area of Island,[Array][Depth-First Search][Breadth-First Search][Union Find][Matrix],71.9%,Medium,0.5198754592859085
779,K-th Symbol in Grammar,[Math][Bit Manipulation][Recursion],46.4%,Medium,0.5175824062288705
556,Next Greater Element III,[Math][Two Pointers][String],33.9%,Medium,0.5168226432383649
799,Champagne Tower,[Dynamic Programming],58.0%,Medium,0.5108256237659907
1235,Maximum Profit in Job Scheduling,[Array][Binary Search][Dynamic Programming][Sorting],54.8%,Hard,0.5026288565618121
852,Peak Index in a Mountain Array,[Array][Binary Search],68.5%,Medium,0.49573913073261056
98,Validate Binary Search Tree,[Tree][Depth-First Search][Binary Search Tree][Binary Tree],32.8%,Medium,0.4893126144121968
735,Asteroid Collision,[Array][Stack][Simulation],44.6%,Medium,0.4884696108187796
446,Arithmetic Slices II - Subsequence,[Array][Dynamic Programming],54.6%,Hard,0.48550781578170077
983,Minimum Cost For Tickets,[Array][Dynamic Programming],65.3%,Medium,0.48285177172358457
545,Boundary of Binary Tree,[Tree][Depth-First Search][Binary Tree],45.2%,Medium,0.4795730802618863
152,Maximum Product Subarray,[Array][Dynamic Programming],35.0%,Medium,0.4787785121761649
1353,Maximum Number of Events That Can Be Attended,[Array][Greedy][Sorting][Heap (Priority Queue)],32.3%,Medium,0.4700036292457356
165,Compare Version Numbers,[Two Pointers][String],36.7%,Medium,0.4675170966757307
739,Daily Temperatures,[Array][Stack][Monotonic Stack],65.9%,Medium,0.46709241903827714
32,Longest Valid Parentheses,[String][Dynamic Programming][Stack],33.9%,Hard,0.4653070067195897
41,First Missing Positive,[Array][Hash Table],37.8%,Hard,0.4646752255812493
54,Spiral Matrix,[Array][Matrix][Simulation],48.9%,Medium,0.4639723581071856
314,Binary Tree Vertical Order Traversal,[Hash Table][Tree][Depth-First Search][Breadth-First Search][Binary Tree],53.9%,Medium,0.4499168706789982
269,Alien Dictionary,[Array][String][Depth-First Search][Breadth-First Search][Graph][Topological Sort],35.7%,Hard,0.44404857414732085
974,Subarray Sums Divisible by K,[Array][Hash Table][Prefix Sum],54.0%,Medium,0.4374678391943382
70,Climbing Stairs,[Math][Dynamic Programming][Memoization],52.8%,Easy,0.43707188911974626
76,Minimum Window Substring,[Hash Table][String][Sliding Window],42.7%,Hard,0.43662552392322673
658,Find K Closest Elements,[Array][Two Pointers][Binary Search][Sliding Window][Sorting][Heap (Priority Queue)],47.2%,Medium,0.4340384805522204
880,Decoded String at Index,[String][Stack],36.4%,Medium,0.4321333551903257
621,Task Scheduler,[Array][Hash Table][Greedy][Sorting][Heap (Priority Queue)][Counting],58.3%,Medium,0.4302451371066513
33,Search in Rotated Sorted Array,[Array][Binary Search],40.5%,Medium,0.4286066366698587
386,Lexicographical Numbers,[Depth-First Search][Trie],63.5%,Medium,0.4274440148269396
1695,Maximum Erasure Value,[Array][Hash Table][Sliding Window],58.0%,Medium,0.4274440148269396
239,Sliding Window Maximum,[Array][Queue][Sliding Window][Heap (Priority Queue)][Monotonic Queue],46.5%,Hard,0.4273493895429932
1109,Corporate Flight Bookings,[Array][Prefix Sum],61.4%,Medium,0.42285685082003355
34,Find First and Last Position of Element in Sorted Array,[Array][Binary Search],44.0%,Medium,0.42140998664517815
888,Fair Candy Swap,[Array][Hash Table][Binary Search][Sorting],61.5%,Easy,0.41836851294407224
2035,Partition Array Into Two Arrays to Minimize Sum Difference,[Array][Two Pointers][Binary Search][Dynamic Programming][Bit Manipulation][Ordered Set][Bitmask],20.0%,Hard,0.41836851294407224
2251,Number of Flowers in Full Bloom,[Array][Hash Table][Binary Search][Sorting][Prefix Sum][Ordered Set],56.8%,Hard,0.41836851294407224
645,Set Mismatch,[Array][Hash Table][Bit Manipulation][Sorting],44.6%,Easy,0.4150651818371836
198,House Robber,[Array][Dynamic Programming],50.9%,Medium,0.4148468400331404
2482,Difference Between Ones and Zeros in Row and Column,[Array][Matrix][Simulation],84.7%,Medium,0.41397579777607296
719,Find K-th Smallest Pair Distance,[Array][Two Pointers][Binary Search][Sorting],37.7%,Hard,0.4096756406445079
1642,Furthest Building You Can Reach,[Array][Greedy][Heap (Priority Queue)],49.7%,Medium,0.40755934971127916
547,Number of Provinces,[Depth-First Search][Breadth-First Search][Union Find][Graph],65.9%,Medium,0.40639318242071826
105,Construct Binary Tree from Preorder and Inorder Traversal,[Array][Hash Table][Divide and Conquer][Tree][Binary Tree],63.5%,Medium,0.4024271310880877
1352,Product of the Last K Numbers,[Array][Math][Design][Queue][Data Stream],50.8%,Medium,0.4013413909243023
236,Lowest Common Ancestor of a Binary Tree,[Tree][Depth-First Search][Binary Tree],61.6%,Medium,0.39981682608275565
50,"Pow(x, n)",[Math][Recursion],34.5%,Medium,0.39794258694353535
1497,Check If Array Pairs Are Divisible by k,[Array][Hash Table][Counting],38.4%,Medium,0.39730179746900346
1578,Minimum Time to Make Rope Colorful,[Array][String][Dynamic Programming][Greedy],63.9%,Medium,0.3933437475758196
1382,Balance a Binary Search Tree,[Divide and Conquer][Greedy][Tree][Depth-First Search][Binary Search Tree][Binary Tree],81.4%,Medium,0.38776553100876343
124,Binary Tree Maximum Path Sum,[Dynamic Programming][Tree][Depth-First Search][Binary Tree],39.9%,Hard,0.38573932704271485
1790,Check if One String Swap Can Make Strings Equal,[Hash Table][String][Counting],45.5%,Easy,0.3856624808119847
201,Bitwise AND of Numbers Range,[Bit Manipulation],46.7%,Medium,0.38282263135840455
1347,Minimum Number of Steps to Make Two Strings Anagram,[Hash Table][String][Counting],82.0%,Medium,0.37948962170490375
435,Non-overlapping Intervals,[Array][Dynamic Programming][Greedy][Sorting],52.9%,Medium,0.375262504256744
1492,The kth Factor of n,[Math][Number Theory],66.8%,Medium,0.3746934494414107
849,Maximize Distance to Closest Person,[Array],48.0%,Medium,0.37117603462953225
1207,Unique Number of Occurrences,[Array][Hash Table],77.0%,Easy,0.37001835911241676
120,Triangle,[Array][Dynamic Programming],56.3%,Medium,0.3685471485927166
661,Image Smoother,[Array][Matrix],67.1%,Easy,0.36772478012531734
68,Text Justification,[Array][String][Simulation],42.7%,Hard,0.36602337605686763
787,Cheapest Flights Within K Stops,[Dynamic Programming][Depth-First Search][Breadth-First Search][Graph][Heap (Priority Queue)][Shortest Path],39.2%,Medium,0.3632228029098636
103,Binary Tree Zigzag Level Order Traversal,[Tree][Breadth-First Search][Binary Tree],58.6%,Medium,0.361282430381405
392,Is Subsequence,[Two Pointers][String][Dynamic Programming],47.9%,Easy,0.36101334553733055
2115,Find All Possible Recipes from Given Supplies,[Array][Hash Table][String][Graph][Topological Sort],49.4%,Medium,0.36101334553733055
1584,Min Cost to Connect All Points,[Array][Union Find][Graph][Minimum Spanning Tree],66.6%,Medium,0.35667494393873234
2391,Minimum Amount of Time to Collect Garbage,[Array][String][Prefix Sum],85.7%,Medium,0.3513978868378886
95,Unique Binary Search Trees II,[Dynamic Programming][Backtracking][Tree][Binary Search Tree][Binary Tree],57.4%,Medium,0.34560472018448546
2558,Take Gifts From the Richest Pile,[Array][Heap (Priority Queue)][Simulation],66.2%,Easy,0.3452699473247421
1877,Minimize Maximum Pair Sum in Array,[Array][Two Pointers][Greedy][Sorting],81.5%,Medium,0.34228620648663277
39,Combination Sum,[Array][Backtracking],71.0%,Medium,0.34136443699277186
2932,Maximum Strong Pair XOR I,[Array][Hash Table][Bit Manipulation][Trie][Sliding Window],75.6%,Easy,0.3393540829961018
1372,Longest ZigZag Path in a Binary Tree,[Dynamic Programming][Tree][Depth-First Search][Binary Tree],66.0%,Medium,0.33647223662121295
1903,Largest Odd Number in String,[Math][String][Greedy],63.4%,Easy,0.3360157198362929
724,Find Pivot Index,[Array][Prefix Sum],57.1%,Easy,0.3355225689335057
149,Max Points on a Line,[Array][Hash Table][Math][Geometry],26.4%,Hard,0.33520721431462625
1944,Number of Visible People in a Queue,[Array][Stack][Monotonic Stack],68.9%,Hard,0.33363937353690887
6,Zigzag Conversion,[String],47.4%,Medium,0.3311927568959644
24,Swap Nodes in Pairs,[Linked List][Recursion],64.0%,Medium,0.33116138377607446
2460,Apply Operations to an Array,[Array][Simulation],67.2%,Easy,0.3281156420302715
934,Shortest Bridge,[Array][Depth-First Search][Breadth-First Search][Matrix],57.7%,Medium,0.322773392263051
2225,Find Players With Zero or One Losses,[Array][Hash Table][Sorting][Counting],73.7%,Medium,0.322773392263051
112,Path Sum,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],50.0%,Easy,0.3226126205585247
1464,Maximum Product of Two Elements in an Array,[Array][Sorting][Heap (Priority Queue)],82.4%,Easy,0.320742934712669
1155,Number of Dice Rolls With Target Sum,[Dynamic Programming],60.7%,Medium,0.3201675275962693
253,Meeting Rooms II,[Array][Two Pointers][Greedy][Sorting][Heap (Priority Queue)][Prefix Sum],51.1%,Medium,0.3188804433076422
51,N-Queens,[Array][Backtracking],67.7%,Hard,0.31790921708384473
424,Longest Repeating Character Replacement,[Hash Table][String][Sliding Window],53.5%,Medium,0.3123250091771612
1431,Kids With the Greatest Number of Candies,[Array],87.3%,Easy,0.31144666139283217
1482,Minimum Number of Days to Make m Bouquets,[Array][Binary Search],51.4%,Medium,0.3106945937243845
1334,Find the City With the Smallest Number of Neighbors at a Threshold Distance,[Dynamic Programming][Graph][Shortest Path],59.4%,Medium,0.3101549283038395
1010,Pairs of Songs With Total Durations Divisible by 60,[Array][Hash Table][Counting],52.8%,Medium,0.30774963550259016
1287,Element Appearing More Than 25% In Sorted Array,[Array],61.1%,Easy,0.30774963550259016
19,Remove Nth Node From End of List,[Linked List][Two Pointers],44.8%,Medium,0.30538164955118186
1608,Special Array With X Elements Greater Than or Equal X,[Array][Binary Search][Sorting],60.0%,Easy,0.30538164955118186
421,Maximum XOR of Two Numbers in an Array,[Array][Hash Table][Bit Manipulation][Trie],53.4%,Medium,0.3030501026800949
560,Subarray Sum Equals K,[Array][Hash Table][Prefix Sum],43.4%,Medium,0.30234351870145837
205,Isomorphic Strings,[Hash Table][String],43.7%,Easy,0.29863044245188547
162,Find Peak Element,[Array][Binary Search],45.9%,Medium,0.29765385700785896
867,Transpose Matrix,[Array][Matrix][Simulation],71.1%,Easy,0.28861100888643976
778,Swim in Rising Water,[Array][Binary Search][Depth-First Search][Breadth-First Search][Union Find][Heap (Priority Queue)][Matrix],60.5%,Hard,0.2876820724517809
44,Wildcard Matching,[String][Dynamic Programming][Greedy][Recursion],27.7%,Hard,0.2871621868149089
348,Design Tic-Tac-Toe,[Array][Hash Table][Design][Matrix][Simulation],57.9%,Medium,0.2856138193877219
1291,Sequential Digits,[Enumeration],65.4%,Medium,0.2813443418672318
9,Palindrome Number,[Math],55.8%,Easy,0.2803785612248174
289,Game of Life,[Array][Matrix][Simulation],68.8%,Medium,0.27958486221916157
1572,Matrix Diagonal Sum,[Array][Matrix],82.8%,Easy,0.27871340246902054
437,Path Sum III,[Tree][Depth-First Search][Binary Tree],46.5%,Medium,0.27618482008612333
43,Multiply Strings,[Math][String][Simulation],40.1%,Medium,0.2743358304988864
1092,Shortest Common Supersequence,[String][Dynamic Programming],59.0%,Hard,0.27380672595816385
412,Fizz Buzz,[Math][String][Simulation],71.8%,Easy,0.2731294587804852
219,Contains Duplicate II,[Array][Hash Table][Sliding Window],44.7%,Easy,0.2729710814971248
904,Fruit Into Baskets,[Array][Hash Table][Sliding Window],44.0%,Medium,0.27029032973991174
232,Implement Queue using Stacks,[Stack][Design][Queue],66.0%,Easy,0.26811926879413733
217,Contains Duplicate,[Array][Hash Table][Sorting],61.4%,Easy,0.26811448741664634
26,Remove Duplicates from Sorted Array,[Array][Two Pointers],55.0%,Easy,0.2666671373704914
3014,Minimum Number of Pushes to Type Word I,[Math][String][Greedy],62.7%,Easy,0.2664662333015083
997,Find the Town Judge,[Array][Hash Table][Graph],49.8%,Easy,0.2646925542270822
92,Reverse Linked List II,[Linked List],47.5%,Medium,0.26356981012283964
1048,Longest String Chain,[Array][Hash Table][Two Pointers][String][Dynamic Programming],61.0%,Medium,0.2595111954850846
633,Sum of Square Numbers,[Math][Two Pointers][Binary Search],34.0%,Medium,0.2578291093020998
206,Reverse Linked List,[Linked List][Recursion],75.7%,Easy,0.2574953197866672
180,Consecutive Numbers,[Database],47.2%,Medium,0.2553466918088445
359,Logger Rate Limiter,[Hash Table][Design][Data Stream],75.8%,Easy,0.25452986513488046
1002,Find Common Characters,[Array][Hash Table][String],68.8%,Easy,0.25452986513488046
725,Split Linked List in Parts,[Linked List],63.9%,Medium,0.2529118727100632
905,Sort Array By Parity,[Array][Two Pointers][Sorting],76.2%,Easy,0.2527333714065298
543,Diameter of Binary Tree,[Tree][Depth-First Search][Binary Tree],59.9%,Easy,0.25201080713913165
290,Word Pattern,[Hash Table][String],41.9%,Easy,0.25055483842288756
790,Domino and Tromino Tiling,[Dynamic Programming],50.9%,Medium,0.2421400520048648
74,Search a 2D Matrix,[Array][Binary Search][Matrix],49.8%,Medium,0.23970003936788642
721,Accounts Merge,[Array][Hash Table][String][Depth-First Search][Breadth-First Search][Union Find][Sorting],56.9%,Medium,0.23859246225525735
21,Merge Two Sorted Lists,[Linked List][Recursion],64.0%,Easy,0.23678241797315275
1661,Average Time of Process per Machine,[Database],66.7%,Easy,0.23672610308007871
240,Search a 2D Matrix II,[Array][Binary Search][Divide and Conquer][Matrix],52.4%,Medium,0.2346473757956944
1512,Number of Good Pairs,[Array][Hash Table][Math][Counting],88.9%,Easy,0.23361485118150516
273,Integer to English Words,[Math][String][Recursion],30.5%,Hard,0.2322522675124501
532,K-diff Pairs in an Array,[Array][Hash Table][Two Pointers][Binary Search][Sorting],42.6%,Medium,0.2295744416445002
62,Unique Paths,[Math][Dynamic Programming][Combinatorics],64.1%,Medium,0.22869556215919914
399,Evaluate Division,[Array][Depth-First Search][Breadth-First Search][Union Find][Graph][Shortest Path],61.5%,Medium,0.22538822116803361
61,Rotate List,[Linked List][Two Pointers],37.4%,Medium,0.22475515520855127
2843,Count Symmetric Integers,[Math][Enumeration],74.2%,Easy,0.22440062250426088
445,Add Two Numbers II,[Linked List][Math][Stack],61.1%,Medium,0.22314355131420976
2461,Maximum Sum of Distinct Subarrays With Length K,[Array][Hash Table][Sliding Window],33.8%,Medium,0.22067136216882066
1716,Calculate Money in Leetcode Bank,[Math],78.2%,Easy,0.219455778235025
341,Flatten Nested List Iterator,[Stack][Tree][Depth-First Search][Design][Queue][Iterator],64.3%,Medium,0.21825356602001797
322,Coin Change,[Array][Dynamic Programming][Breadth-First Search],43.6%,Medium,0.21536975529661903
132,Palindrome Partitioning II,[String][Dynamic Programming],33.8%,Hard,0.21472498084861397
1041,Robot Bounded In Circle,[Math][String][Simulation],55.6%,Medium,0.2124355370417375
332,Reconstruct Itinerary,[Depth-First Search][Graph][Eulerian Circuit],43.3%,Hard,0.21106039931128698
876,Middle of the Linked List,[Linked List][Two Pointers],77.3%,Easy,0.21031782910428387
713,Subarray Product Less Than K,[Array][Sliding Window],47.2%,Medium,0.20800057121164617
743,Network Delay Time,[Depth-First Search][Breadth-First Search][Graph][Heap (Priority Queue)][Shortest Path],53.4%,Medium,0.2071597101203954
46,Permutations,[Array][Backtracking],78.0%,Medium,0.207040143747631
2877,Create a DataFrame from List,,80.7%,Easy,0.2061181797504451
2405,Optimal Partition of String,[Hash Table][String][Greedy],78.3%,Medium,0.20386340056870947
496,Next Greater Element I,[Array][Hash Table][Stack][Monotonic Stack],72.0%,Easy,0.2037476209666304
981,Time Based Key-Value Store,[Hash Table][String][Binary Search][Design],49.6%,Medium,0.20157261209600713
1021,Remove Outermost Parentheses,[String][Stack],82.2%,Easy,0.20112063922677242
2620,Counter,,80.2%,Easy,0.20083244232865827
1859,Sorting the Sentence,[String][Sorting],83.0%,Easy,0.20067069546215116
73,Set Matrix Zeroes,[Array][Hash Table][Matrix],55.0%,Medium,0.1992222272423296
148,Sort List,[Linked List][Two Pointers][Divide and Conquer][Sorting][Merge Sort],57.4%,Medium,0.19622624370172712
312,Burst Balloons,[Array][Dynamic Programming],58.5%,Hard,0.19574457712609533
137,Single Number II,[Array][Bit Manipulation],62.2%,Medium,0.1950000150537256
349,Intersection of Two Arrays,[Array][Hash Table][Two Pointers][Binary Search][Sorting],72.4%,Easy,0.19313724549582356
235,Lowest Common Ancestor of a Binary Search Tree,[Tree][Depth-First Search][Binary Search Tree][Binary Tree],64.3%,Medium,0.1920119633590886
1302,Deepest Leaves Sum,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],86.3%,Medium,0.19105523676270922
1091,Shortest Path in Binary Matrix,[Array][Breadth-First Search][Matrix],47.1%,Medium,0.19085204667768627
136,Single Number,[Array][Bit Manipulation],72.5%,Easy,0.19005181762098883
297,Serialize and Deserialize Binary Tree,[String][Tree][Depth-First Search][Breadth-First Search][Design][Binary Tree],56.5%,Hard,0.18571714579509285
1020,Number of Enclaves,[Array][Depth-First Search][Breadth-First Search][Union Find][Matrix],68.7%,Medium,0.18485641239714268
485,Max Consecutive Ones,[Array],58.6%,Easy,0.1847536617625671
1047,Remove All Adjacent Duplicates In String,[String][Stack],69.3%,Easy,0.1845712765279701
224,Basic Calculator,[Math][String][Stack][Recursion],43.2%,Hard,0.18269268316674286
973,K Closest Points to Origin,[Array][Math][Divide and Conquer][Geometry][Sorting][Heap (Priority Queue)][Quickselect],66.2%,Medium,0.18211346190193325
144,Binary Tree Preorder Traversal,[Stack][Tree][Depth-First Search][Binary Tree],69.1%,Easy,0.17879144918609313
143,Reorder List,[Linked List][Two Pointers][Stack][Recursion],56.0%,Medium,0.17844755867744094
116,Populating Next Right Pointers in Each Node,[Linked List][Tree][Depth-First Search][Breadth-First Search][Binary Tree],62.3%,Medium,0.17798315519535646
12,Integer to Roman,[Hash Table][Math][String],64.3%,Medium,0.17789849767729501
1071,Greatest Common Divisor of Strings,[Math][String],51.5%,Easy,0.17675651236256293
1657,Determine if Two Strings Are Close,[Hash Table][String][Sorting][Counting],55.3%,Medium,0.1755467047088198
1046,Last Stone Weight,[Array][Heap (Priority Queue)],65.3%,Easy,0.17486281150627858
234,Palindrome Linked List,[Linked List][Two Pointers][Stack][Recursion],51.8%,Easy,0.1727230996720166
501,Find Mode in Binary Search Tree,[Tree][Depth-First Search][Binary Search Tree][Binary Tree],55.9%,Easy,0.1720973230180951
1008,Construct Binary Search Tree from Preorder Traversal,[Array][Stack][Tree][Binary Search Tree][Monotonic Stack][Binary Tree],81.8%,Medium,0.17135825199668508
316,Remove Duplicate Letters,[String][Stack][Greedy][Monotonic Stack],49.4%,Medium,0.16989903679539747
622,Design Circular Queue,[Array][Linked List][Design][Queue],51.4%,Medium,0.16989903679539747
1026,Maximum Difference Between Node and Ancestor,[Tree][Depth-First Search][Binary Tree],78.2%,Medium,0.16917873135476025
71,Simplify Path,[String][Stack],41.9%,Medium,0.1672290934140504
25,Reverse Nodes in k-Group,[Linked List][Recursion],58.1%,Hard,0.16635770580494058
797,All Paths From Source to Target,[Backtracking][Depth-First Search][Breadth-First Search][Graph],82.4%,Medium,0.1656671218888174
626,Exchange Seats,[Database],69.1%,Medium,0.1652099163212334
2529,Maximum Count of Positive Integer and Negative Integer,[Array][Binary Search][Counting],71.2%,Easy,0.16430305129127631
2706,Buy Two Chocolates,[Array][Sorting],69.8%,Easy,0.1636294237818021
509,Fibonacci Number,[Math][Dynamic Programming][Recursion][Memoization],70.8%,Easy,0.16344179897725258
987,Vertical Order Traversal of a Binary Tree,[Hash Table][Tree][Depth-First Search][Breadth-First Search][Binary Tree],47.1%,Hard,0.16310930637214985
918,Maximum Sum Circular Subarray,[Array][Divide and Conquer][Dynamic Programming][Queue][Monotonic Queue],44.4%,Medium,0.1603426500751794
131,Palindrome Partitioning,[String][Dynamic Programming][Backtracking],67.2%,Medium,0.16019963970668397
283,Move Zeroes,[Array][Two Pointers],61.6%,Easy,0.15989695301071286
350,Intersection of Two Arrays II,[Array][Hash Table][Two Pointers][Binary Search][Sorting],56.4%,Easy,0.15906469462968736
229,Majority Element II,[Array][Hash Table][Sorting][Counting],51.2%,Medium,0.15765117803680806
456,132 Pattern,[Array][Binary Search][Stack][Monotonic Stack][Ordered Set],33.7%,Medium,0.15656906069153992
746,Min Cost Climbing Stairs,[Array][Dynamic Programming],65.5%,Easy,0.15626261303040184
1004,Max Consecutive Ones III,[Array][Binary Search][Sliding Window][Prefix Sum],62.7%,Medium,0.15610983952255864
109,Convert Sorted List to Binary Search Tree,[Linked List][Divide and Conquer][Tree][Binary Search Tree][Binary Tree],61.6%,Medium,0.15355773584309076
262,Trips and Users,[Database],36.3%,Hard,0.15355773584309076
368,Largest Divisible Subset,[Array][Math][Dynamic Programming][Sorting],45.2%,Medium,0.15355773584309076
1688,Count of Matches in Tournament,[Math][Simulation],85.8%,Easy,0.15355773584309076
1913,Maximum Product Difference Between Two Pairs,[Array][Sorting],82.9%,Easy,0.15355773584309076
78,Subsets,[Array][Backtracking][Bit Manipulation],77.1%,Medium,0.15143748173677285
570,Managers with at Least 5 Direct Reports,[Database],51.4%,Medium,0.15143748173677285
498,Diagonal Traverse,[Array][Matrix][Simulation],59.8%,Medium,0.1506602748874898
28,Find the Index of the First Occurrence in a String,[Two Pointers][String][String Matching],41.9%,Easy,0.14912141021977157
1209,Remove All Adjacent Duplicates in String II,[String][Stack],57.4%,Medium,0.14897379164772453
1838,Frequency of the Most Frequent Element,[Array][Binary Search][Greedy][Sliding Window][Sorting][Prefix Sum],45.3%,Medium,0.14842000511827327
160,Intersection of Two Linked Lists,[Hash Table][Linked List][Two Pointers],57.0%,Easy,0.14732471475685843
678,Valid Parenthesis String,[String][Dynamic Programming][Stack][Greedy],34.8%,Medium,0.1451820098444979
832,Flipping an Image,[Array][Two Pointers][Bit Manipulation][Matrix][Simulation],81.7%,Easy,0.1451820098444979
57,Insert Interval,[Array],40.0%,Medium,0.1449185538269559
2092,Find All People With Secret,[Depth-First Search][Breadth-First Search][Union Find][Graph][Sorting],46.0%,Hard,0.14378789279171172
82,Remove Duplicates from Sorted List II,[Linked List][Two Pointers],47.1%,Medium,0.1413004605730646
1351,Count Negative Numbers in a Sorted Matrix,[Array][Binary Search][Matrix],77.3%,Easy,0.14107859825990554
1926,Nearest Exit from Entrance in Maze,[Array][Breadth-First Search][Matrix],46.7%,Medium,0.14107859825990554
199,Binary Tree Right Side View,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],62.8%,Medium,0.14052258817385616
85,Maximal Rectangle,[Array][Dynamic Programming][Stack][Matrix][Monotonic Stack],46.7%,Hard,0.13959908918694763
45,Jump Game II,[Array][Dynamic Programming][Greedy],40.3%,Medium,0.13919038017623117
394,Decode String,[String][Stack][Recursion],59.0%,Medium,0.13825661970102562
303,Range Sum Query - Immutable,[Array][Design][Prefix Sum],62.8%,Easy,0.13397932096347895
79,Word Search,[Array][String][Backtracking][Matrix],41.4%,Medium,0.13341987882457434
450,Delete Node in a BST,[Tree][Binary Search Tree][Binary Tree],51.1%,Medium,0.1333332747437359
213,House Robber II,[Array][Dynamic Programming],41.8%,Medium,0.13313574474596881
115,Distinct Subsequences,[String][Dynamic Programming],46.5%,Hard,0.1330864537962701
516,Longest Palindromic Subsequence,[String][Dynamic Programming],62.4%,Medium,0.13220542557941892
38,Count and Say,[String],54.5%,Medium,0.12819804664916004
29,Divide Two Integers,[Math][Bit Manipulation],17.3%,Medium,0.12766314425609057
80,Remove Duplicates from Sorted Array II,[Array][Two Pointers],57.4%,Medium,0.12617519275733058
66,Plus One,[Array][Math],45.0%,Easy,0.12612915690460033
628,Maximum Product of Three Numbers,[Array][Math][Sorting],45.1%,Easy,0.12595240897761434
1910,Remove All Occurrences of a Substring,[String],76.9%,Medium,0.12555653398976382
791,Custom Sort String,[Hash Table][String][Sorting],69.8%,Medium,0.12516314295400602
684,Redundant Connection,[Depth-First Search][Breadth-First Search][Union Find][Graph],62.7%,Medium,0.12477221253464107
37,Sudoku Solver,[Array][Hash Table][Backtracking][Matrix],60.5%,Hard,0.12327489245733352
96,Unique Binary Search Trees,[Math][Dynamic Programming][Tree][Binary Search Tree][Binary Tree],60.8%,Medium,0.12323264042394814
171,Excel Sheet Column Number,[Math][String],63.5%,Easy,0.12323264042394814
242,Valid Anagram,[Hash Table][String][Sorting],64.3%,Easy,0.1228382546167251
1470,Shuffle the Array,[Array],88.4%,Easy,0.12193705984360334
680,Valid Palindrome II,[Two Pointers][String][Greedy],40.4%,Easy,0.12095261041766249
184,Department Highest Salary,[Database],51.3%,Medium,0.11778303565638346
912,Sort an Array,[Array][Divide and Conquer][Sorting][Heap (Priority Queue)][Merge Sort][Bucket Sort][Radix Sort][Counting Sort],56.9%,Medium,0.11762891683046385
279,Perfect Squares,[Math][Dynamic Programming][Breadth-First Search],54.7%,Medium,0.1147388932751553
268,Missing Number,[Array][Hash Table][Math][Binary Search][Bit Manipulation][Sorting],66.4%,Easy,0.11324303587009586
2402,Meeting Rooms III,[Array][Hash Table][Sorting][Heap (Priority Queue)][Simulation],45.2%,Hard,0.11216225709564905
231,Power of Two,[Math][Bit Manipulation][Recursion],47.7%,Easy,0.11142413150072303
410,Split Array Largest Sum,[Array][Binary Search][Dynamic Programming][Greedy][Prefix Sum],55.0%,Hard,0.11122563511022437
523,Continuous Subarray Sum,[Array][Hash Table][Math][Prefix Sum],28.8%,Medium,0.11060987154397002
67,Add Binary,[Math][String][Bit Manipulation][Simulation],53.3%,Easy,0.10784852120640745
72,Edit Distance,[String][Dynamic Programming],56.1%,Medium,0.10648348040245009
567,Permutation in String,[Hash Table][Two Pointers][String][Sliding Window],44.3%,Medium,0.1034215911531522
1920,Build Array from Permutation,[Array][Simulation],89.6%,Easy,0.10318423623523076
182,Duplicate Emails,[Database],70.9%,Easy,0.10236201266156972
27,Remove Element,[Array][Two Pointers],56.2%,Easy,0.10128434901653703
371,Sum of Two Integers,[Math][Bit Manipulation],51.6%,Medium,0.10109611687136877
853,Car Fleet,[Array][Stack][Sorting][Monotonic Stack],50.7%,Medium,0.10058723690516862
274,H-Index,[Array][Sorting][Counting Sort],38.8%,Medium,0.10041874774704733
796,Rotate String,[String][String Matching],57.7%,Easy,0.09909090264423091
64,Minimum Path Sum,[Array][Dynamic Programming][Matrix],63.6%,Medium,0.09865606331051037
237,Delete Node in a Linked List,[Linked List],78.1%,Medium,0.09844007281325252
443,String Compression,[Two Pointers][String],54.0%,Medium,0.09705888158204505
442,Find All Duplicates in an Array,[Array][Hash Table],73.6%,Medium,0.09374540917097383
101,Symmetric Tree,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],56.1%,Easy,0.09352605801082346
65,Valid Number,[String],19.5%,Hard,0.09330773169945256
1752,Check if Array Is Sorted and Rotated,[Array],50.9%,Easy,0.09275439349224782
455,Assign Cookies,[Array][Two Pointers][Greedy][Sorting],52.7%,Easy,0.09138775158942865
100,Same Tree,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],61.7%,Easy,0.08915380247493312
2666,Allow One Function Call,,86.1%,Easy,0.08796877294595712
133,Clone Graph,[Hash Table][Depth-First Search][Breadth-First Search][Graph],56.6%,Medium,0.0877756108823857
1456,Maximum Number of Vowels in a Substring of Given Length,[String][Sliding Window],58.3%,Medium,0.0876900332762814
518,Coin Change II,[Array][Dynamic Programming],63.6%,Medium,0.08701137698962977
785,Is Graph Bipartite?,[Depth-First Search][Breadth-First Search][Union Find][Graph],55.4%,Medium,0.08682239465891518
2824,Count Pairs Whose Sum is Less than Target,[Array][Two Pointers][Binary Search][Sorting],86.9%,Easy,0.08644688360743705
191,Number of 1 Bits,[Divide and Conquer][Bit Manipulation],70.4%,Easy,0.08601287466004025
451,Sort Characters By Frequency,[Hash Table][String][Sorting][Heap (Priority Queue)][Bucket Sort][Counting],72.4%,Medium,0.08588967188042969
872,Leaf-Similar Trees,[Tree][Depth-First Search][Binary Tree],70.3%,Easy,0.08515780834030685
94,Binary Tree Inorder Traversal,[Stack][Tree][Depth-First Search][Binary Tree],75.8%,Easy,0.08452758931834498
141,Linked List Cycle,[Hash Table][Linked List][Two Pointers],49.5%,Easy,0.08299385637571831
610,Triangle Judgement,[Database],71.1%,Easy,0.08252102368800351
1662,Check If Two String Arrays are Equivalent,[Array][String],85.3%,Easy,0.08252102368800351
104,Maximum Depth of Binary Tree,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],75.1%,Easy,0.08233746634621424
2469,Convert the Temperature,[Math],89.0%,Easy,0.08052638362008792
40,Combination Sum II,[Array][Backtracking],54.2%,Medium,0.08047235322257314
189,Rotate Array,[Array][Math][Two Pointers],40.3%,Medium,0.08004270767353643
542,01 Matrix,[Array][Dynamic Programming][Breadth-First Search][Matrix],48.2%,Medium,0.07972347383203841
1493,Longest Subarray of 1's After Deleting One Element,[Array][Dynamic Programming][Sliding Window],67.1%,Medium,0.07956481041235021
123,Best Time to Buy and Sell Stock III,[Array][Dynamic Programming],47.6%,Hard,0.07878087785311429
102,Binary Tree Level Order Traversal,[Tree][Breadth-First Search][Binary Tree],66.8%,Medium,0.07763353611776078
703,Kth Largest Element in a Stream,[Tree][Design][Binary Search Tree][Heap (Priority Queue)][Binary Tree][Data Stream],56.7%,Easy,0.07696104113612832
1204,Last Person to Fit in the Bus,[Database],66.1%,Medium,0.07637297878457401
106,Construct Binary Tree from Inorder and Postorder Traversal,[Array][Hash Table][Divide and Conquer][Tree][Binary Tree],62.4%,Medium,0.07593779883079804
119,Pascal's Triangle II,[Array][Dynamic Programming],63.7%,Easy,0.07579383936953364
69,Sqrt(x),[Math][Binary Search],38.5%,Easy,0.07315875518638974
415,Add Strings,[Math][String][Simulation],51.7%,Easy,0.07197349962508924
151,Reverse Words in a String,[Two Pointers][String],40.9%,Medium,0.07020425867324853
584,Find Customer Referee,[Database],69.4%,Easy,0.06671919477965885
383,Ransom Note,[Hash Table][String][Counting],60.9%,Easy,0.06566910350785725
204,Count Primes,[Array][Math][Enumeration][Number Theory],33.5%,Medium,0.06351340572232586
1211,Queries Quality and Percentage,[Database],52.1%,Easy,0.06301296782873406
225,Implement Stack using Queues,[Stack][Design][Queue],63.3%,Easy,0.06271647386762642
2149,Rearrange Array Elements by Sign,[Array][Two Pointers][Simulation],83.9%,Medium,0.06222847139840936
1731,The Number of Employees Which Report to Each Employee,[Database],45.2%,Easy,0.06080900459560568
374,Guess Number Higher or Lower,[Binary Search][Interactive],53.2%,Easy,0.05849620668160855
2703,Return Length of Arguments Passed,,93.6%,Easy,0.05807146640389905
2942,Find Words Containing Character,[Array][String],88.2%,Easy,0.056512210263342307
110,Balanced Binary Tree,[Tree][Depth-First Search][Binary Tree],51.6%,Easy,0.056264838586137754
572,Subtree of Another Tree,[Tree][Depth-First Search][String Matching][Binary Tree][Hash Function],47.6%,Easy,0.053994220576736765
1075,Project Employees I,[Database],61.7%,Easy,0.051691093239179656
208,Implement Trie (Prefix Tree),[Hash Table][String][Design][Trie],64.7%,Medium,0.05064373281875492
35,Search Insert Position,[Array][Binary Search],45.5%,Easy,0.05048390543199203
90,Subsets II,[Array][Backtracking][Bit Manipulation],57.0%,Medium,0.04843561709959499
226,Invert Binary Tree,[Tree][Depth-First Search][Breadth-First Search][Binary Tree],76.6%,Easy,0.04811189737589208
328,Odd Even Linked List,[Linked List],61.4%,Medium,0.04717856027509048
338,Counting Bits,[Dynamic Programming][Bit Manipulation],78.1%,Easy,0.04717856027509048
1581,Customer Who Visited but Did Not Make Any Transactions,[Database],69.6%,Easy,0.04509782218673358
2665,Counter II,,79.5%,Easy,0.04410858325627566
1480,Running Sum of 1d Array,[Array][Prefix Sum],86.7%,Easy,0.04202298977484789
258,Add Digits,[Math][Simulation][Number Theory],66.4%,Easy,0.04175972102859266
643,Maximum Average Subarray I,[Array][Sliding Window],43.1%,Easy,0.037563101575648544
1934,Confirmation Rate,[Database],56.6%,Medium,0.036235848454044865
230,Kth Smallest Element in a BST,[Tree][Depth-First Search][Binary Search Tree][Binary Tree],72.2%,Medium,0.03451593709018879
1251,Average Selling Price,[Database],43.6%,Easy,0.033503971231401815
1929,Concatenation of Array,[Array][Simulation],89.7%,Easy,0.03157326191609021
345,Reverse Vowels of a String,[Two Pointers][String],52.6%,Easy,0.031034298195512264
1148,Article Views I,[Database],74.6%,Easy,0.030438602876830676
83,Remove Duplicates from Sorted List,[Linked List],52.2%,Easy,0.027455396452354876
344,Reverse String,[Two Pointers][String],77.6%,Easy,0.026739561041899163
605,Can Place Flowers,[Array][Greedy],29.4%,Easy,0.026351985988424496
122,Best Time to Buy and Sell Stock II,[Array][Dynamic Programming][Greedy],66.0%,Medium,0.024141184452073947
8,String to Integer (atoi),[String],17.1%,Medium,0.02168106606132404
167,Two Sum II - Input Array Is Sorted,[Array][Two Pointers][Binary Search],61.0%,Medium,0.01996074256253806
75,Sort Colors,[Array][Two Pointers][Sorting],61.7%,Medium,0.01875347974830633
197,Rising Temperature,[Database],46.9%,Easy,0.01821543989134118
595,Big Countries,[Database],68.3%,Easy,0.016949558313773268
704,Binary Search,[Array][Binary Search],57.2%,Easy,0.01691372244206185
58,Length of Last Word,[String],49.0%,Easy,0.015169043229667648
1683,Invalid Tweets,[Database],84.9%,Easy,0.014164542768650788
125,Valid Palindrome,[Two Pointers][String],47.0%,Easy,0.010926085203587683
977,Squares of a Sorted Array,[Array][Two Pointers][Sorting],72.7%,Easy,0.0036653573520393137
